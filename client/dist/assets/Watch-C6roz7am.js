import{d as a,m as n,u as p,_ as m,r as d,o as c,j as u}from"./top-OWao-v9Z.js";import{W as h,V as l,P as _,u as f}from"./PlayerController-DtgYBoge.js";import"./_commonjsHelpers-CSPQI3rM.js";import"./ChannelsStore-9c6RYf3c.js";import"./ssrBoot-CrQTWPnk.js";import"./VDialog-D88n8S_M.js";import"./VSwitch-DN7oTwnI.js";import"./VTextField-BzpvtVp7.js";import"./VAvatar-D-DBgU_Z.js";import"./VCard-zKNkfzY2.js";import"./swiper-hmV_ebJ9.js";import"./CommentMuteSettings-BASvfUL0.js";import"./VSelect-DxTlKxMj.js";import"./vuedraggable.umd-VXaQq4-x.js";import"./Twitter-yikI4LVS.js";import"./mpegts-CHqqkE9D.js";import"./PlayerUtils-BMfVEgCY.js";let t=null;const y=a({name:"Video-Watch",components:{Watch:h},computed:{...n(f,p)},created(){this.init()},beforeRouteUpdate(o,r,e){this.destroy().then(()=>this.init()),e()},beforeUnmount(){this.destroy()},methods:{async init(){if(this.$route.params.video_id===void 0){this.$router.push({path:"/not-found/"});return}const o=await l.fetchVideo(parseFloat(this.$route.params.video_id));if(o===null){this.$router.push({path:"/not-found/"});return}this.playerStore.recorded_program=o,t=new _("Video"),await t.init()},async destroy(){t!==null&&(await t.destroy(),t=null)}}});function $(o,r,e,i,W,V){const s=d("Watch",!0);return c(),u(s,{playback_mode:"Video"})}const D=m(y,[["render",$]]);export{D as default};
